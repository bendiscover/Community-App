<?php

// Insert into theme's functions.php

add_filter('bp_activity_truncate_entry', function($excerpt, $text, $append_text){

	ob_start();
	bp_activity_id();
	$activity_id = ob_get_clean();

// Creates 'keys' for the (title and url) metadata of the current post. The keys are used to update the metadata at the end of this code.

	$get_title = bp_activity_get_meta($activity_id, 'easin_nasa_title');
	$get_url = bp_activity_get_meta($activity_id, 'easin_nasa_url');
	$get_type = bp_activity_get_meta($activity_id, 'easin_nasa_type');


	if($get_type == 'video'){
		$ex_content = '<iframe width="100%" height="315" src="'. $get_url .'" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>';
	} else {
		$ex_content = "<img src=\"" . $get_url . "\" width=\"100%\" height=\"auto\" alt=\"\">";
	}

// Adds a string to them, plus the class for the above h3 styling

	$title = '';
	$url = '';
	if($get_title){
		$title = '<h3 class="easin_custom_title">'. $get_title .'</h3>';
	}
	if($get_url){
		$url = '<p>Read more: '. esc_url( $get_url ) .'</p>';
	}

	return $title .$text . $ex_content;

}, 10, 3);


add_filter( 'https_local_ssl_verify', '__return_true' );
// NOTE: THE CODE TO COPY/PASTE STARTS *BELOW* THIS LINE
// Setting a custom timeout value for cURL. Using a high value for priority to ensure the function runs after any other added to the same action hook.
add_action('http_api_curl', 'easin_custom_curl_timeout', 9999, 1);
function easin_custom_curl_timeout( $handle ){
	curl_setopt( $handle, CURLOPT_CONNECTTIMEOUT, 30 ); // 30 seconds. Too much for production, only for testing.
	curl_setopt( $handle, CURLOPT_TIMEOUT, 30 ); // 30 seconds. Too much for production, only for testing.
}
// Setting custom timeout for the HTTP request
add_filter( 'http_request_timeout', 'easin_custom_http_request_timeout', 9999 );
function easin_custom_http_request_timeout( $timeout_value ) {
	return 30; // 30 seconds. Too much for production, only for testing.
}
// Setting custom timeout in HTTP request args
add_filter('http_request_args', 'easin_custom_http_request_args', 9999, 1);
function easin_custom_http_request_args( $r ){
	$r['timeout'] = 30; // 30 seconds. Too much for production, only for testing.
	return $r;
}

// NASA poster

function easin_daily_nasa_crron_test_activation(){

    if( ! wp_next_scheduled ( 'easin_daily_nasa_cron_test' ) ) {

        wp_schedule_event( strtotime('05:15:00'), 'daily', 'easin_daily_nasa_cron_test');
    }

}
add_action( 'wp', 'easin_daily_nasa_crron_test_activation' );

add_action( 'easin_daily_nasa_cron_test', 'easin_daily_nasa_cron_test_call');
function easin_daily_nasa_cron_test_call(){
	$request = wp_remote_get( 'https://api.nasa.gov/planetary/apod?api_key=FG5Tjp9PIkpnW0dPobTIvi1wJ4F4bnwmDFZgDcRo' );

	$body = wp_remote_retrieve_body( $request );

	$data = json_decode( $body );

	$nasa_date = get_user_meta( 238, 'nasa_date', true );

	if( $data->date != $nasa_date ){
		$bp_activity_id = bp_activity_add(array(
			'action' =>bp_core_get_userlink( 238 ),
			'content' => $data->explanation,
			'component' => 'blogs',
			'type' => 'activity_update',
//			'primary_link' => "<strong>www.google.com</strong>",
			'user_id' => 238
		));

		bp_activity_update_meta( $bp_activity_id, 'easin_nasa_title', $data->title );
		bp_activity_update_meta( $bp_activity_id, 'easin_nasa_url', $data->url );
		update_user_meta( 238, 'nasa_date', $data->date );
	}
}


